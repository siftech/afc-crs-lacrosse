from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class TypesFreeformSubmission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, submission=None):  # noqa: E501
        """TypesFreeformSubmission - a model defined in OpenAPI

        :param submission: The submission of this TypesFreeformSubmission.  # noqa: E501
        :type submission: str
        """
        self.openapi_types = {
            'submission': str
        }

        self.attribute_map = {
            'submission': 'submission'
        }

        self._submission = submission

    @classmethod
    def from_dict(cls, dikt) -> 'TypesFreeformSubmission':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The types.FreeformSubmission of this TypesFreeformSubmission.  # noqa: E501
        :rtype: TypesFreeformSubmission
        """
        return util.deserialize_model(dikt, cls)

    @property
    def submission(self) -> str:
        """Gets the submission of this TypesFreeformSubmission.

        Base64 encoded arbitrary data  2MiB max size before Base64 encoding  # noqa: E501

        :return: The submission of this TypesFreeformSubmission.
        :rtype: str
        """
        return self._submission

    @submission.setter
    def submission(self, submission: str):
        """Sets the submission of this TypesFreeformSubmission.

        Base64 encoded arbitrary data  2MiB max size before Base64 encoding  # noqa: E501

        :param submission: The submission of this TypesFreeformSubmission.
        :type submission: str
        """
        if submission is None:
            raise ValueError("Invalid value for `submission`, must not be `None`")  # noqa: E501

        self._submission = submission
