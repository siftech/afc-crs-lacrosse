 INFO: Running with entropic power schedule (0xFF, 100).
 INFO: Seed: 3581212085
 INFO: Loaded 1 modules   (80 inline 8-bit counters): 80 [0x555c7521f4f8, 0x555c7521f548), 
 INFO: Loaded 1 PC tables (80 PCs): 80 [0x555c7521f548,0x555c7521fa48), 
 /out/pov_harness: Running 1 inputs 100 time(s) each.
 Running: /work/tmp_blob
 =================================================================
 ==17==ERROR: AddressSanitizer: heap-use-after-free on address 0x503000037d50 at pc 0x555c74f746dd bp 0x7ffe05f7cfa0 sp 0x7ffe05f7cf98
 READ of size 8 at 0x503000037d50 thread T0
     #0 0x555c74f746dc in ngx_black_list_remove /src/harnesses/bld/src/core/ngx_cycle.c:1512:20
     #1 0x555c74ff27d6 in ngx_http_process_white_list /src/harnesses/bld/src/http/ngx_http_request.c:3871:26
     #2 0x555c75001ed9 in ngx_http_process_request_headers /src/harnesses/bld/src/http/ngx_http_request.c:1468:23
     #3 0x555c74f9a57c in ngx_event_process_posted /src/harnesses/bld/src/event/ngx_event_posted.c:34:9
     #4 0x555c74f37957 in LLVMFuzzerTestOneInput /src/harnesses/bld/src/harnesses/pov_harness.cc:323:5
     #5 0x555c74de96a0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
     #6 0x555c74dd3e34 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
     #7 0x555c74dd98ca in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
     #8 0x555c74e05cc2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
     #9 0x7f4bcacdf082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
     #10 0x555c74dca90d in _start (/out/pov_harness+0xb190d)
 
 0x503000037d50 is located 0 bytes inside of 24-byte region [0x503000037d50,0x503000037d68)
 freed by thread T0 here:
     #0 0x555c74ef7996 in free /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:52:3
     #1 0x555c74f746a3 in ngx_black_list_remove /src/harnesses/bld/src/core/ngx_cycle.c
     #2 0x555c74ff27d6 in ngx_http_process_white_list /src/harnesses/bld/src/http/ngx_http_request.c:3871:26
     #3 0x555c75001ed9 in ngx_http_process_request_headers /src/harnesses/bld/src/http/ngx_http_request.c:1468:23
     #4 0x555c74f9a57c in ngx_event_process_posted /src/harnesses/bld/src/event/ngx_event_posted.c:34:9
     #5 0x555c74f37957 in LLVMFuzzerTestOneInput /src/harnesses/bld/src/harnesses/pov_harness.cc:323:5
     #6 0x555c74de96a0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
     #7 0x555c74dd3e34 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
     #8 0x555c74dd98ca in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
     #9 0x555c74e05cc2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
     #10 0x7f4bcacdf082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
 
 previously allocated by thread T0 here:
     #0 0x555c74ef7c3e in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
     #1 0x555c74fa6074 in ngx_alloc /src/harnesses/bld/src/os/unix/ngx_alloc.c:22:9
     #2 0x555c74f74229 in ngx_black_list_insert /src/harnesses/bld/src/core/ngx_cycle.c:1477:41
     #3 0x555c74ff24d0 in ngx_http_process_black_list /src/harnesses/bld/src/http/ngx_http_request.c:3919:17
     #4 0x555c75001ed9 in ngx_http_process_request_headers /src/harnesses/bld/src/http/ngx_http_request.c:1468:23
     #5 0x555c74f9a57c in ngx_event_process_posted /src/harnesses/bld/src/event/ngx_event_posted.c:34:9
     #6 0x555c74f37957 in LLVMFuzzerTestOneInput /src/harnesses/bld/src/harnesses/pov_harness.cc:323:5
     #7 0x555c74de96a0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
     #8 0x555c74dd3e34 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
     #9 0x555c74dd98ca in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
     #10 0x555c74e05cc2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
     #11 0x7f4bcacdf082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
 
 SUMMARY: AddressSanitizer: heap-use-after-free /src/harnesses/bld/src/core/ngx_cycle.c:1512:20 in ngx_black_list_remove
 Shadow bytes around the buggy address:
   0x503000037a80: fd fd fd fd fa fa fd fd fd fd fa fa 00 00 00 00
   0x503000037b00: fa fa fd fd fd fd fa fa fd fd fd fd fa fa 00 00
   0x503000037b80: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
   0x503000037c00: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 06 fa
   0x503000037c80: fa fa 00 00 07 fa fa fa 00 00 00 00 fa fa 00 00
 =>0x503000037d00: 00 fa fa fa 00 00 00 fa fa fa[fd]fd fd fa fa fa
   0x503000037d80: 00 00 00 fa fa fa 00 00 00 fa fa fa fa fa fa fa
   0x503000037e00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
   0x503000037e80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
   0x503000037f00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
   0x503000037f80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
 Shadow byte legend (one shadow byte represents 8 application bytes):
   Addressable:           00
   Partially addressable: 01 02 03 04 05 06 07 
   Heap left redzone:       fa
   Freed heap region:       fd
   Stack left redzone:      f1
   Stack mid redzone:       f2
   Stack right redzone:     f3
   Stack after return:      f5
   Stack use after scope:   f8
   Global redzone:          f9
   Global init order:       f6
   Poisoned by user:        f7
   Container overflow:      fc
   Array cookie:            ac
   Intra object redzone:    bb
   ASan internal:           fe
   Left alloca redzone:     ca
   Right alloca redzone:    cb
 ==17==ABORTING
