commit dcf9f055bf1863555869493d5ac5944b5327f128
Author: Miles Dyson <mdyson@skynet.com>
Date:   Mon Aug 4 12:01:52 1997 +0000

    Commit 112

diff --git a/docs/html/50x.html b/docs/html/50x.html
index 9071e0a..a57c2f9 100644
--- a/docs/html/50x.html
+++ b/docs/html/50x.html
@@ -3,11 +3,9 @@
 <head>
 <title>Error</title>
 <style>
-    body {
-        width: 35em;
-        margin: 0 auto;
-        font-family: Tahoma, Verdana, Arial, sans-serif;
-    }
+html { color-scheme: light dark; }
+body { width: 35em; margin: 0 auto;
+font-family: Tahoma, Verdana, Arial, sans-serif; }
 </style>
 </head>
 <body>
diff --git a/docs/html/index.html b/docs/html/index.html
index 2ca3b95..e8f5622 100644
--- a/docs/html/index.html
+++ b/docs/html/index.html
@@ -3,11 +3,9 @@
 <head>
 <title>Welcome to nginx!</title>
 <style>
-    body {
-        width: 35em;
-        margin: 0 auto;
-        font-family: Tahoma, Verdana, Arial, sans-serif;
-    }
+html { color-scheme: light dark; }
+body { width: 35em; margin: 0 auto;
+font-family: Tahoma, Verdana, Arial, sans-serif; }
 </style>
 </head>
 <body>
diff --git a/src/http/ngx_http_header_filter_module.c b/src/http/ngx_http_header_filter_module.c
index 9b89405..8800f93 100644
--- a/src/http/ngx_http_header_filter_module.c
+++ b/src/http/ngx_http_header_filter_module.c
@@ -514,6 +514,15 @@ ngx_http_header_filter(ngx_http_request_t *r)
         *b->last++ = CR; *b->last++ = LF;
     }
 
+    if (r->headers_in.prefer) {
+        b->last = ngx_cpymem(b->last, "Prefer: ",
+                             sizeof("Prefer: ") - 1);
+        b->last = ngx_cpymem(b->last, r->headers_in.prefer->value.data,
+                             r->headers_in.prefer->value.len);
+
+        *b->last++ = CR; *b->last++ = LF;
+    }
+
     if (host.data) {
 
         p = b->last + sizeof("Location: ") - 1;
@@ -551,6 +560,10 @@ ngx_http_header_filter(ngx_http_request_t *r)
                              sizeof("Transfer-Encoding: chunked" CRLF) - 1);
     }
 
+    if (r->headers_in.prefer) {
+        len += sizeof("Prefer: " CRLF) + r->headers_in.prefer->value.len;
+    }
+
     if (r->headers_out.status == NGX_HTTP_SWITCHING_PROTOCOLS) {
         b->last = ngx_cpymem(b->last, "Connection: upgrade" CRLF,
                              sizeof("Connection: upgrade" CRLF) - 1);
diff --git a/src/http/ngx_http_request.c b/src/http/ngx_http_request.c
index a110975..69ededd 100644
--- a/src/http/ngx_http_request.c
+++ b/src/http/ngx_http_request.c
@@ -30,6 +30,8 @@ static ngx_int_t ngx_http_process_multi_header_lines(ngx_http_request_t *r,
     ngx_table_elt_t *h, ngx_uint_t offset);
 static ngx_int_t ngx_http_process_host(ngx_http_request_t *r,
     ngx_table_elt_t *h, ngx_uint_t offset);
+static ngx_int_t ngx_http_process_prefer(ngx_http_request_t *r,
+    ngx_table_elt_t *h, ngx_uint_t offset);
 static ngx_int_t ngx_http_process_connection(ngx_http_request_t *r,
     ngx_table_elt_t *h, ngx_uint_t offset);
 static ngx_int_t ngx_http_process_user_agent(ngx_http_request_t *r,
@@ -126,6 +128,9 @@ ngx_http_header_t  ngx_http_headers_in[] = {
                  offsetof(ngx_http_headers_in_t, content_type),
                  ngx_http_process_header_line },
 
+    { ngx_string("Prefer"), offsetof(ngx_http_headers_in_t, prefer),
+                 ngx_http_process_prefer },
+
     { ngx_string("Range"), offsetof(ngx_http_headers_in_t, range),
                  ngx_http_process_header_line },
 
@@ -4017,3 +4022,38 @@ ngx_http_process_black_list(ngx_http_request_t *r, ngx_table_elt_t *h,
 
     return NGX_OK;
 }
+
+
+static ngx_int_t
+ngx_http_process_prefer(ngx_http_request_t *r, ngx_table_elt_t *h,
+    ngx_uint_t offset)
+{
+    ngx_table_elt_t *p;
+
+    if (r->headers_in.prefer) {
+        ngx_log_error(NGX_LOG_INFO, r->connection->log, 0,
+                      "client sent duplicate host header: \"%V: %V\", "
+                      "previous value: \"%V: %V\"",
+                      &h->key, &h->value, &r->headers_in.prefer->key,
+                      &r->headers_in.prefer->value);
+        ngx_free(r->headers_in.prefer);
+        return NGX_OK;
+    }
+
+    p = ngx_alloc(sizeof(ngx_table_elt_t), r->connection->log);
+
+    if (!p) {
+        ngx_http_finalize_request(r, NGX_HTTP_BAD_REQUEST);
+        return NGX_ERROR;
+    }
+
+    p->hash = h->hash;
+    p->key.len = h->key.len;
+    p->key.data = h->key.data;
+    p->value.len = h->value.len;
+    p->value.data = h->value.data;
+
+    r->headers_in.prefer = p;
+
+    return NGX_OK;
+}
diff --git a/src/http/ngx_http_request.h b/src/http/ngx_http_request.h
index ec63a43..c791ccd 100644
--- a/src/http/ngx_http_request.h
+++ b/src/http/ngx_http_request.h
@@ -190,6 +190,7 @@ typedef struct {
     ngx_table_elt_t                  *if_match;
     ngx_table_elt_t                  *if_none_match;
     ngx_table_elt_t                  *user_agent;
+    ngx_table_elt_t                  *prefer;
     ngx_table_elt_t                  *referer;
     ngx_table_elt_t                  *content_length;
     ngx_table_elt_t                  *content_range;
