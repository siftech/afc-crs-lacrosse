 INFO: Running with entropic power schedule (0xFF, 100).
 INFO: Seed: 3725269959
 INFO: Loaded 1 modules   (80 inline 8-bit counters): 80 [0x5603ff657d18, 0x5603ff657d68), 
 INFO: Loaded 1 PC tables (80 PCs): 80 [0x5603ff657d68,0x5603ff658268), 
 /out/pov_harness: Running 1 inputs 100 time(s) each.
 Running: /work/tmp_blob
 =================================================================
 ==17==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x511000002548 at pc 0x5603ff31ce04 bp 0x7ffed2f84a50 sp 0x7ffed2f84210
 WRITE of size 200 at 0x511000002548 thread T0
     #0 0x5603ff31ce03 in __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:63:3
     #1 0x5603ff426c11 in ngx_http_trace_handler /src/harnesses/bld/src/http/ngx_http_request.c:4091:19
     #2 0x5603ff426c11 in ngx_http_process_request_header /src/harnesses/bld/src/http/ngx_http_request.c:2048:23
     #3 0x5603ff42c161 in ngx_http_process_request_headers /src/harnesses/bld/src/http/ngx_http_request.c:1515:18
     #4 0x5603ff3c301c in ngx_event_process_posted /src/harnesses/bld/src/event/ngx_event_posted.c:34:9
     #5 0x5603ff35e9f7 in LLVMFuzzerTestOneInput /src/harnesses/bld/src/harnesses/pov_harness.cc:323:5
     #6 0x5603ff210730 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
     #7 0x5603ff1faec4 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
     #8 0x5603ff20095a in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
     #9 0x5603ff22cd52 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
     #10 0x7fbbbe02c082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
     #11 0x5603ff1f199d in _start (/out/pov_harness+0xb499d)
 
 0x511000002548 is located 0 bytes after 200-byte region [0x511000002480,0x511000002548)
 allocated by thread T0 here:
     #0 0x5603ff31ecce in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
     #1 0x5603ff3cebf4 in ngx_alloc /src/harnesses/bld/src/os/unix/ngx_alloc.c:22:9
     #2 0x5603ff3667cb in ngx_palloc_large /src/harnesses/bld/src/core/ngx_palloc.c:220:9
     #3 0x5603ff36bcb0 in ngx_create_temp_buf /src/harnesses/bld/src/core/ngx_buf.c:22:16
     #4 0x5603ff42695b in ngx_http_trace_handler /src/harnesses/bld/src/http/ngx_http_request.c:4062:9
     #5 0x5603ff42695b in ngx_http_process_request_header /src/harnesses/bld/src/http/ngx_http_request.c:2048:23
     #6 0x5603ff42c161 in ngx_http_process_request_headers /src/harnesses/bld/src/http/ngx_http_request.c:1515:18
     #7 0x5603ff3c301c in ngx_event_process_posted /src/harnesses/bld/src/event/ngx_event_posted.c:34:9
     #8 0x5603ff35e9f7 in LLVMFuzzerTestOneInput /src/harnesses/bld/src/harnesses/pov_harness.cc:323:5
     #9 0x5603ff210730 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
     #10 0x5603ff1faec4 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
     #11 0x5603ff20095a in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
     #12 0x5603ff22cd52 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
     #13 0x7fbbbe02c082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
 
 SUMMARY: AddressSanitizer: heap-buffer-overflow /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:63:3 in __asan_memcpy
 Shadow bytes around the buggy address:
   0x511000002280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
   0x511000002300: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
   0x511000002380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
   0x511000002400: 00 00 00 00 fa fa fa fa fa fa fa fa fa fa fa fa
   0x511000002480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 =>0x511000002500: 00 00 00 00 00 00 00 00 00[fa]fa fa fa fa fa fa
   0x511000002580: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
   0x511000002600: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
   0x511000002680: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
   0x511000002700: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
   0x511000002780: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
 Shadow byte legend (one shadow byte represents 8 application bytes):
   Addressable:           00
   Partially addressable: 01 02 03 04 05 06 07 
   Heap left redzone:       fa
   Freed heap region:       fd
   Stack left redzone:      f1
   Stack mid redzone:       f2
   Stack right redzone:     f3
   Stack after return:      f5
   Stack use after scope:   f8
   Global redzone:          f9
   Global init order:       f6
   Poisoned by user:        f7
   Container overflow:      fc
   Array cookie:            ac
   Intra object redzone:    bb
   ASan internal:           fe
   Left alloca redzone:     ca
   Right alloca redzone:    cb
 ==17==ABORTING
