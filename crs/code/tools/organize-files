#!/bin/bash
PROGNAME=$(basename "$0")
warn()  { echo "$PROGNAME: ${@}" 1>&2; }
die()   { warn "${@}"; exit 1; }
dbug()   { test -z $DEBUG || warn "${@}"; }

# example usage:
   #dbug This only prints if DEBUG is defined
   #test -e foo || die file foo must exist
   #test -z $FOO && die Environment variable FOO must be defined

# bash-ism to get location of script.  Must use /bin/pwd to get absolute path.
thisdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd -P "$( dirname "$SOURCE" )" && /bin/pwd )"
dbug thisdir is $thisdir

#Assume working in the local directory unless otherwise stated
#If an argument has been given for the path, then use that instead of local .
dir="${1:-.}"
cd "$dir" || { echo "Cannot access directory $dir"; exit 1; }

mkdir -p juliet_code_cleaned/bad_functions_only
mkdir -p juliet_exec_cleaned/bad_functions_only

mv *.bad.c* juliet_code_cleaned/bad_functions_only
mv *.bad.out juliet_exec_cleaned/bad_functions_only
$thisdir/rename-files juliet_code_cleaned/bad_functions_only
$thisdir/rename-files juliet_exec_cleaned/bad_functions_only

exit 0
