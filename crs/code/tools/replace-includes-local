#!/bin/bash

#Assume working in the local directory unless otherwise stated
WORKING_PATH=.

#If an argument has been given for the path, then use that instead of local .
if [ $# -gt 0 ]; then
    WORKING_PATH=$1
fi

#Place to store the variants of the .c and .cpp files that include the header file
mkdir ${WORKING_PATH}/include_c_files
mkdir ${WORKING_PATH}/bad_only_include_c_files
mkdir ${WORKING_PATH}/good_only_include_c_files

#Source: https://stackoverflow.com/questions/39411539/using-sed-replace-line-in-file-with-another-file
#  Last version of case 3) in Sundeep's answer
#NOTE: This version is not matching the specific include file, but assuming it just wants std_testcase.h in the include "..." for ...'s value
for f in ${WORKING_PATH}/*.c; do sed -e "/include\ \"std_testcase\.h\"/{r testcasesupport/std_testcase.h" -e "d}" ${WORKING_PATH}/${f} > ${WORKING_PATH}/include_c_files/${f}_includes.c; sed -e "/include\ \"std_testcase_io.h\"/{r testcasesupport/std_testcase_io\.h" -e "d}" ${WORKING_PATH}/include_c_files/${f}_includes.c > ${WORKING_PATH}/include_c_files/${f}_includes2.c; sed -e "/include\ \"std_thread\.h\"/{r testcasesupport/std_thread.h" -e "d}" ${WORKING_PATH}/include_c_files/${f}_includes2.c > ${WORKING_PATH}/include_c_files/${f}_includes.c; sed -e "/include\ \"testcases\.h\"/{r testcasesupport/testcases.h" -e "d}" ${WORKING_PATH}/include_c_files/${f}_includes.c > ${WORKING_PATH}/include_c_files/${f}_includes2.c; sed -e "/\#include\ \"\(.*\.h\)\"/{r \1" -e "d}" ${WORKING_PATH}/include_c_files/${f}_includes2.c > ${WORKING_PATH}/include_c_files/${f}_includes.c; rm ${WORKING_PATH}/include_c_files/${f}_includes2.c; done

for f in ${WORKING_PATH}/*.cpp; do sed -e "/include\ \"std_testcase\.h\"/{r testcasesupport/std_testcase.h" -e "d}" ${WORKING_PATH}/${f} > ${WORKING_PATH}/include_c_files/${f}_includes.cpp; sed -e "/include\ \"std_testcase_io\.h\"/{r testcasesupport/std_testcase_io.h" -e "d}" ${WORKING_PATH}/include_c_files/${f}_includes.cpp > ${WORKING_PATH}/include_c_files/${f}_includes2.cpp; sed -e "/include\ \"std_thread\.h\"/{r testcasesupport/std_thread.h" -e "d}" ${WORKING_PATH}/include_c_files/${f}_includes2.cpp > ${WORKING_PATH}/include_c_files/${f}_includes.cpp; sed -e "/include\ \"testcases\.h\"/{r testcasesupport/testcases.h" -e "d}" ${WORKING_PATH}/include_c_files/${f}_includes.cpp > ${WORKING_PATH}/include_c_files/${f}_includes2.cpp; sed -e "/\#include\ \"\(.*\.h\)\"/{r \1" -e "d}" ${WORKING_PATH}/include_c_files/${f}_includes2.cpp > ${WORKING_PATH}/include_c_files/${f}_includes.cpp; rm ${WORKING_PATH}/include_c_files/${f}_includes2.cpp; done

#The bad function version
for f in ${WORKING_PATH}/*.bad.c; do sed -e "/include\ \"std_testcase.h\"/{r testcasesupport/std_testcase.h" -e "d}" ${WORKING_PATH}/${f} > ${WORKING_PATH}/bad_only_include_c_files/${f}_includes.c; sed -e "/include\ \"std_testcase_io.h\"/{r testcasesupport/std_testcase_io\.h" -e "d}" ${WORKING_PATH}/bad_only_include_c_files/${f}_includes.c > ${WORKING_PATH}/bad_only_include_c_files/${f}_includes2.c; sed -e "/include\ \"std_thread\.h\"/{r testcasesupport/std_thread.h" -e "d}" ${WORKING_PATH}/bad_only_include_c_files/${f}_includes2.c > ${WORKING_PATH}/bad_only_include_c_files/${f}_includes.c; sed -e "/include\ \"testcases\.h\"/{r testcasesupport/testcases.h" -e "d}" ${WORKING_PATH}/bad_only_include_c_files/${f}_includes.c > ${WORKING_PATH}/bad_only_include_c_files/${f}_includes2.c; sed -e "/\#include\ \"\(.*\.h\)\"/{r \1" -e "d}" ${WORKING_PATH}/bad_only_include_c_files/${f}_includes2.c > ${WORKING_PATH}/bad_only_include_c_files/${f}_includes.c; rm ${WORKING_PATH}/bad_only_include_c_files/${f}_includes2.c; done

for f in ${WORKING_PATH}/*.bad.cpp; do sed -e "/include\ \"std_testcase.h\"/{r testcasesupport/std_testcase.h" -e "d}" ${WORKING_PATH}/${f} > ${WORKING_PATH}/bad_only_include_c_files/${f}_includes.cpp; sed -e "/include\ \"std_testcase_io\.h\"/{r testcasesupport/std_testcase_io.h" -e "d}" ${WORKING_PATH}/bad_only_include_c_files/${f}_includes.cpp > ${WORKING_PATH}/bad_only_include_c_files/${f}_includes2.cpp; sed -e "/include\ \"std_thread\.h\"/{r testcasesupport/std_thread.h" -e "d}" ${WORKING_PATH}/bad_only_include_c_files/${f}_includes2.cpp > ${WORKING_PATH}/bad_only_include_c_files/${f}_includes.cpp; sed -e "/include\ \"testcases\.h\"/{r testcasesupport/testcases.h" -e "d}" ${WORKING_PATH}/bad_only_include_c_files/${f}_includes.cpp > ${WORKING_PATH}/bad_only_include_c_files/${f}_includes2.cpp; sed -e "/\#include\ \"\(.*\.h\)\"/{r \1" -e "d}" ${WORKING_PATH}/bad_only_include_c_files/${f}_includes2.cpp > ${WORKING_PATH}/bad_only_include_c_files/${f}_includes.cpp; rm ${WORKING_PATH}/bad_only_include_c_files/${f}_includes2.cpp; done

#The good function version
for f in ${WORKING_PATH}/*.good.c; do sed -e "/include\ \"std_testcase.h\"/{r testcasesupport/std_testcase.h" -e "d}" ${WORKING_PATH}/${f} > ${WORKING_PATH}/good_only_include_c_files/${f}_includes.c; sed -e "/include\ \"std_testcase_io.h\"/{r testcasesupport/std_testcase_io\.h" -e "d}" ${WORKING_PATH}/good_only_include_c_files/${f}_includes.c > ${WORKING_PATH}/good_only_include_c_files/${f}_includes2.c; sed -e "/include\ \"std_thread\.h\"/{r testcasesupport/std_thread.h" -e "d}" ${WORKING_PATH}/good_only_include_c_files/${f}_includes2.c > ${WORKING_PATH}/good_only_include_c_files/${f}_includes.c; sed -e "/include\ \"testcases\.h\"/{r testcasesupport/testcases.h" -e "d}" ${WORKING_PATH}/good_only_include_c_files/${f}_includes.c > ${WORKING_PATH}/good_only_include_c_files/${f}_includes2.c; sed -e "/\#include\ \"\(.*\.h\)\"/{r \1" -e "d}" ${WORKING_PATH}/good_only_include_c_files/${f}_includes2.c > ${WORKING_PATH}/good_only_include_c_files/${f}_includes.c; rm ${WORKING_PATH}/good_only_include_c_files/${f}_includes2.c; done

for f in ${WORKING_PATH}/*.good.cpp; do sed -e "/include\ \"std_testcase.h\"/{r testcasesupport/std_testcase.h" -e "d}" ${WORKING_PATH}/${f} > ${WORKING_PATH}/good_only_include_c_files/${f}_includes.cpp; sed -e "/include\ \"std_testcase_io\.h\"/{r testcasesupport/std_testcase_io.h" -e "d}" ${WORKING_PATH}/good_only_include_c_files/${f}_includes.cpp > ${WORKING_PATH}/good_only_include_c_files/${f}_includes2.cpp; sed -e "/include\ \"std_thread\.h\"/{r testcasesupport/std_thread.h" -e "d}" ${WORKING_PATH}/good_only_include_c_files/${f}_includes2.cpp > ${WORKING_PATH}/good_only_include_c_files/${f}_includes.cpp; sed -e "/include\ \"testcases\.h\"/{r testcasesupport/testcases.h" -e "d}" ${WORKING_PATH}/good_only_include_c_files/${f}_includes.cpp > ${WORKING_PATH}/good_only_include_c_files/${f}_includes2.cpp; sed -e "/\#include\ \"\(.*\.h\)\"/{r \1" -e "d}" ${WORKING_PATH}/good_only_include_c_files/${f}_includes2.cpp > ${WORKING_PATH}/good_only_include_c_files/${f}_includes.cpp; rm ${WORKING_PATH}/good_only_include_c_files/${f}_includes2.cpp; done
